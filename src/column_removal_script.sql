-- Script to remove unused columns by recreating tables
-- Generated by DBCleanup tool
-- Date: 2025-03-06T18:21:30.108012

BEGIN TRANSACTION;
CREATE TABLE authors_new (
    id TEXT PRIMARY KEY,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
INSERT INTO authors_new (id, created_at, updated_at)
SELECT id, created_at, updated_at FROM authors;
DROP TABLE authors;
ALTER TABLE authors_new RENAME TO authors;
CREATE UNIQUE INDEX idx_authors_unique_name_components 
                ON authors(given_name, family_name, IFNULL(institution, ''))
            ;
CREATE INDEX idx_authors_family_name ON authors(family_name COLLATE NOCASE);
CREATE INDEX idx_authors_given_name ON authors(given_name COLLATE NOCASE);
CREATE INDEX idx_authors_display_name ON authors(display_name COLLATE NOCASE);
CREATE INDEX idx_authors_institution ON authors(institution);
CREATE UNIQUE INDEX idx_authors_unique_name_inst 
                ON authors(display_name, IFNULL(institution, ''))
            ;
COMMIT;

BEGIN TRANSACTION;
CREATE TABLE author_identifiers_new (
    author_id TEXT NOT NULL PRIMARY KEY,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (author_id) REFERENCES authors(id) ON DELETE NO ACTION ON UPDATE CASCADE
);
INSERT INTO author_identifiers_new (author_id, created_at)
SELECT author_id, created_at FROM author_identifiers;
DROP TABLE author_identifiers;
ALTER TABLE author_identifiers_new RENAME TO author_identifiers;
CREATE UNIQUE INDEX idx_unique_orcid 
                ON author_identifiers(identifier_value) 
                WHERE identifier_type = 'orcid' AND identifier_value IS NOT NULL
            ;
COMMIT;

BEGIN TRANSACTION;
CREATE TABLE publication_venues_new (
    id TEXT PRIMARY KEY,
    display_name TEXT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
INSERT INTO publication_venues_new (id, display_name, created_at, updated_at)
SELECT id, display_name, created_at, updated_at FROM publication_venues;
DROP TABLE publication_venues;
ALTER TABLE publication_venues_new RENAME TO publication_venues;
CREATE INDEX idx_venues_name ON publication_venues(display_name);
COMMIT;

BEGIN TRANSACTION;
CREATE TABLE publications_new (
    id TEXT PRIMARY KEY,
    venue_id TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (venue_id) REFERENCES publication_venues(id) ON DELETE NO ACTION ON UPDATE NO ACTION
);
INSERT INTO publications_new (id, venue_id, created_at, updated_at)
SELECT id, venue_id, created_at, updated_at FROM publications;
DROP TABLE publications;
ALTER TABLE publications_new RENAME TO publications;
CREATE UNIQUE INDEX idx_publications_unique_doi 
                ON publications(doi) 
                WHERE doi IS NOT NULL
            ;
CREATE INDEX idx_publications_year ON publications(publication_year);
CREATE INDEX idx_publications_doi ON publications(doi);
CREATE INDEX idx_publications_citation_count ON publications(citation_count DESC);
COMMIT;

BEGIN TRANSACTION;
CREATE TABLE author_publications_new (
    author_id TEXT NOT NULL PRIMARY KEY,
    publication_id TEXT NOT NULL PRIMARY KEY,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (publication_id) REFERENCES publications(id) ON DELETE NO ACTION ON UPDATE CASCADE,
    FOREIGN KEY (author_id) REFERENCES authors(id) ON DELETE NO ACTION ON UPDATE CASCADE
);
INSERT INTO author_publications_new (author_id, publication_id, created_at)
SELECT author_id, publication_id, created_at FROM author_publications;
DROP TABLE author_publications;
ALTER TABLE author_publications_new RENAME TO author_publications;
COMMIT;

BEGIN TRANSACTION;
CREATE TABLE fields_new (
    id TEXT PRIMARY KEY,
    parent_field_id TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (parent_field_id) REFERENCES fields(id) ON DELETE NO ACTION ON UPDATE SET NULL
);
INSERT INTO fields_new (id, parent_field_id, created_at, updated_at)
SELECT id, parent_field_id, created_at, updated_at FROM fields;
DROP TABLE fields;
ALTER TABLE fields_new RENAME TO fields;
CREATE UNIQUE INDEX idx_fields_unique_name 
                ON fields(name)
            ;
COMMIT;

BEGIN TRANSACTION;
CREATE TABLE field_keywords_new (
    field_id TEXT NOT NULL PRIMARY KEY,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (field_id) REFERENCES fields(id) ON DELETE NO ACTION ON UPDATE CASCADE
);
INSERT INTO field_keywords_new (field_id, created_at)
SELECT field_id, created_at FROM field_keywords;
DROP TABLE field_keywords;
ALTER TABLE field_keywords_new RENAME TO field_keywords;
COMMIT;

BEGIN TRANSACTION;
CREATE TABLE author_fields_new (
    author_id TEXT NOT NULL PRIMARY KEY,
    field_id TEXT NOT NULL PRIMARY KEY,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (field_id) REFERENCES fields(id) ON DELETE NO ACTION ON UPDATE CASCADE,
    FOREIGN KEY (author_id) REFERENCES authors(id) ON DELETE NO ACTION ON UPDATE CASCADE
);
INSERT INTO author_fields_new (author_id, field_id, created_at, updated_at)
SELECT author_id, field_id, created_at, updated_at FROM author_fields;
DROP TABLE author_fields;
ALTER TABLE author_fields_new RENAME TO author_fields;
COMMIT;

BEGIN TRANSACTION;
CREATE TABLE author_collaborations_new (
    author1_id TEXT NOT NULL PRIMARY KEY,
    author2_id TEXT NOT NULL PRIMARY KEY,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (author2_id) REFERENCES authors(id) ON DELETE NO ACTION ON UPDATE NO ACTION,
    FOREIGN KEY (author1_id) REFERENCES authors(id) ON DELETE NO ACTION ON UPDATE NO ACTION
);
INSERT INTO author_collaborations_new (author1_id, author2_id, created_at, updated_at)
SELECT author1_id, author2_id, created_at, updated_at FROM author_collaborations;
DROP TABLE author_collaborations;
ALTER TABLE author_collaborations_new RENAME TO author_collaborations;
COMMIT;

BEGIN TRANSACTION;
CREATE TABLE merge_candidates_new (
    id INTEGER PRIMARY KEY,
    primary_author_id TEXT NOT NULL,
    secondary_author_id TEXT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (secondary_author_id) REFERENCES authors(id) ON DELETE NO ACTION ON UPDATE NO ACTION,
    FOREIGN KEY (primary_author_id) REFERENCES authors(id) ON DELETE NO ACTION ON UPDATE NO ACTION
);
INSERT INTO merge_candidates_new (id, primary_author_id, secondary_author_id, created_at)
SELECT id, primary_author_id, secondary_author_id, created_at FROM merge_candidates;
DROP TABLE merge_candidates;
ALTER TABLE merge_candidates_new RENAME TO merge_candidates;
CREATE INDEX idx_merge_candidates_status
                ON merge_candidates(status)
            ;
COMMIT;
